Sub getNumber()
    Dim cn As Object, rs As Object, output As String, sql As String
    
    Dim b As Integer
    Dim i As Integer
    
    Dim testString() As Variant
    testColor = "{W}"
    testRarity = "2"
    manaCost = "2"
    Dim baseType As String
    baseType = "Creature"
    
    Dim count As Integer
    
    Dim position As Integer
    
    Dim stringArray() As String
    
    Dim Entries As Collection
    
    
    '---Connecting to the Data Source---
    Set cn = CreateObject("ADODB.Connection")
    With cn
        .Provider = "Microsoft.ACE.OLEDB.12.0"
        .ConnectionString = "Data Source=" & ThisWorkbook.Path & "\" & ThisWorkbook.Name & ";" & _
        "Extended Properties=""Excel 12.0 Xml;HDR=YES"";"
        .Open
    End With
    
    
     '---Run the SQL SELECT Query---
    'sql = "SELECT COUNT(*) FROM [Sheet1$] Where [Rarity2] > " & testRarity & " AND [COLOR_IDENTITY]='" & testColor & "'"
    'works
    
    sql = "SELECT COUNT(*) FROM [Sheet1$] Where [Rarity2] > " & testRarity & " AND [COLOR_IDENTITY]='" & testColor & "'"
    
    'won't allow me to filter by type
    'sql = "SELECT COUNT(*) FROM [Sheet1$] Where [Sheet1$].[SimpleType] == '" & baseType & "' AND [COLOR_IDENTITY]='" & testColor & "'"
    Set rs = cn.Execute(sql)
    

    Do
       'output = output & rs(0) '& ";" & rs(1) & ";" & rs(2) & vbNewLine
       'Debug.Print rs(0); '";" & rs(1) & ";" & rs(2)
        count = rs(0)
       rs.Movenext
    Loop Until rs.EOF
    'MsgBox output
    
    ReDim stringArray(count)
    
    sql = "SELECT [NAME] FROM [Sheet1$] Where [Rarity2] > " & testRarity & " AND [COLOR_IDENTITY]='" & testColor & "'"
    Set rs = cn.Execute(sql)
    
    'reset to beginning of file
    rs.MoveFirst
    
    i = 0
    
     Do Until rs.EOF
        stringArray(i) = rs.Fields(0)
        'Entries.Add(stringArray(i), i)
       'output = output & rs(0) & vbNewLine '& ";" & rs(1) & ";" & rs(2) & vbNewLine
       'stringArray(i) = rs(0)
       'stringArray(0) = output
       'Debug.Print rs(0); '";" & rs(1) & ";" & rs(2)
        'b = rs(0)
        i = i + 1
       rs.Movenext
    Loop
    'MsgBox output
    
    'MsgBox stringArray(10)
    'MsgBox stringArray(count)
    position = Round(Rnd * count, 0)
    MsgBox stringArray(position)
    
    'DeleteElementAt(position, stringArray)
    
    '---Clean up---
    rs.Close
    cn.Close
    Set cn = Nothing
    Set rs = Nothing
    
'    RunSELECT = b
End Sub


Public Sub DeleteElementAt(ByVal index As Integer, ByRef prLst As Variant)
       Dim i As Integer

        ' Move all element back one position
        For i = index + 1 To UBound(prLst)
            prLst(i - 1) = prLst(i)
        Next

        ' Shrink the array by one, removing the last one
        ReDim Preserve prLst(Len(prLst) - 1)
End Sub



